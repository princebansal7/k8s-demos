apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-mimic-configmap
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    http {
      server {
        listen 80;
        server_name k8s-mimic.princebansal.tech;

        # Redirect /backend to /backend/
        location = /backend {
          return 301 /backend/;
        }
        # Redirect /frontend to /frontend/
        location = /frontend {
          return 301 /frontend/;
        }
        
        location /backend/ {
          rewrite ^/backend/?(.*)$ /$1 break;
          proxy_pass http://backend-cip-service.default.svc.cluster.local:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
        location /frontend/ {
          rewrite ^/frontend/?(.*)$ /$1 break;
          proxy_pass http://frontend-cip-service.default.svc.cluster.local:80;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimic-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mimic-ingress
  template:
    metadata:
      labels:
        app: mimic-ingress
    spec:
      containers:
        - name: nginx-container
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: ingress-mimic-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: lb-service
spec:
  selector:
    app: mimic-ingress
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
